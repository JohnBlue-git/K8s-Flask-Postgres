name: CI with Kubernetes Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}  # Use matrix variable

    strategy:
      matrix: # Use matrix
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-20.04] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: johnbluedocker
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          cd ./web
          docker build -t johnbluedocker/flask-app:latest .
          docker push johnbluedocker/flask-app:latest

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.23.0
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/postgres-deployment.yaml
          kubectl apply -f k8s/postgres-service.yaml
          kubectl apply -f k8s/flask-deployment.yaml
          kubectl apply -f k8s/flask-service.yaml
          kubectl wait --for=condition=available --timeout=300s deployment/flask-deployment
          kubectl wait --for=condition=available --timeout=300s deployment/postgres-deployment

      - name: Run unit tests in Flask pod
        run: |
          POD_NAME=$(kubectl get pods -l app=flask -o jsonpath="{.items[0].metadata.name}")
          kubectl exec $POD_NAME -- env PYTHONPATH=/app pytest tests/test_app.py --verbose --junitxml=report.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: report.xml